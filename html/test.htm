<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <title>Beer Gravity Monitor</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
  <style>
    .row-margin-10 { margin-top: 1.0em; }
  </style>
</head>
<body class="py-4">

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.6.3.min.js" integrity="sha256-pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=" crossorigin="anonymous"></script>

  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="/index.htm">Beer Gravity Monitor</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/index.htm">Home</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle active" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Configuration
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="/config.htm">Configuration</a></li>
              <li><a class="dropdown-item" href="/format.htm">Format editor</a></li>
              <li><a class="dropdown-item" href="#">Test push</a></li>
              <li><a class="dropdown-item" href="/firmware.htm">Upload firmware</a></li>
              <li><a class="dropdown-item" href="/backup.htm">Backup/Restore</a></li>
            </ul>
          </li>
                  <li class="nav-item">
            <a class="nav-link" href="/calibration.htm">Calibration</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/about.htm">About</a>
          </li>
        </ul>
      </div>
      <div class="spinner-border text-light" id="spinner" role="status"></div>
    </div>
  </nav>

  <!-- START MAIN INDEX -->

  <div class="container row-margin-10">

    <div class="alert alert-success alert-dismissible hide fade d-none" role="alert">
      <div id="alert"></div>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <script>
      function showError( msg ) {
        $('.alert').removeClass('alert-success').addClass('alert-danger').removeClass('hide').addClass('show').removeClass('d-none');
        $('#alert').text( msg );
      }

      function showSuccess( msg ) {
        $('.alert').addClass('alert-success').removeClass('alert-danger').removeClass('hide').addClass('show').removeClass('d-none');
        $('#alert').text( msg );
      }

      $("#alert-btn").click(function(e){
        $('.alert').addClass('hide').removeClass('show').addClass('d-none');
      });    
    </script>


    <div class="accordion" id="accordion">
      <div class="accordion-item">
        <h2 class="accordion-header" id="headingTest">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTest" aria-expanded="true" aria-controls="collapseTest">
            <b>Testing push targets</b>
          </button>
        </h2>
        <div id="collapseTest" class="accordion-collapse collapse show" aria-labelledby="headingTest" data-bs-parent="#accordion">
          <div class="accordion-body">
            <div class="row mb-3">
              <pre class="card-preview" id="preview" name="preview">Press test button to start testing all defined push targets.</pre> 
            </div>

            <div class="row mb-3">
              <div class="col-sm-8">
                <button type="button" class="btn btn-primary" id="test-btn" data-bs-toggle="tooltip" title="Test all push targets">Test</button>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    $('#spinner').hide(); 

    function clearLog() {
      $("#preview").text("");
    }

    function appendLog(log) {
      doc = $("#preview").text();
      doc += log + "\n";
      $("#preview").text(doc);
    }

    function checkPushTest() {
      console.log("Checking status of "  + testName);

      var url = "/api/test/push/status";
      // var url = "/test/push.json";  
      $.getJSON(url, function (cfg) {
        console.log(cfg);

        var status = cfg["status"];

        if(status) {
          console.log("Not yet ready with test, checking in 2s.");
          setTimeout(checkPushTest, 2000);        
        } else {
          var code = cfg["code"];
          var success = cfg["success"];
          var enabled = cfg["enabled"];

          if(!enabled) {
            appendLog( "Push target '" + testName + "' is not configured/used" );
          } else if(success) {
            appendLog( "Push target '" + testName + "' successful" );
          } else{
            if(testName == "mqtt") {
              if(code==-3)
                appendLog( "Push target 'mqtt' failed to connect" );
              else if(code==-4)
                appendLog( "Push target 'mqtt' failed with error timeout" );
              else if(code==-10)
                appendLog( "Push target 'mqtt' failed with error denied" );
              else if(code==-100)
                appendLog( "Push target 'mqtt' skipped since it's using SSL" );
              else 
                appendLog( "Push target 'mqtt' failed with error code " + code );
            }
            else if(testName == "influxdb") {
              if(code==400)
                appendLog( "Push target 'influxdb' failed with error code 400, bad request" );
              else if(code==401)
                appendLog( "Push target 'influxdb' failed with error code 401, unauthorized" );
              else if(code==404)
                appendLog( "Push target 'influxdb' failed with error code 404, url not found" );
              else if(code==-100)
                appendLog( "Push target 'influxdb' skipped since it's using SSL" );
              else 
                appendLog( "Push target 'influxdb' failed with error code " + code );
            } else {
              if(code==400)
                appendLog( "Push target '" + testName + "' failed with error code 400, bad request" );
              else if(code==401)
                appendLog( "Push target '" + testName + "' failed with error code 401, unauthorized" );
              else if(code==404)
                appendLog( "Push target '" + testName + "' failed with error code 404, url not found" );
              else if(code==-100)
                appendLog( "Push target '" + testName + "' skipped since it's using SSL" );
              else 
                appendLog( "Push target '" + testName + "' failed with error code " + code );
            }
          }

          if(testFunctions.length>0) {
            testFunctions.pop()();
          } else {
            appendLog("All tests completed");
            $('#spinner').hide(); 
            $("#test-btn").prop("disabled", false);
          }
        }
      })
      .fail(function () {
        appendLog( "Failed to test push target '" + testName + "'");
      })

    };    

    var testFunctions = [];
    var testName = "";
    var id = "";

    // Get the configuration values from the API
    $("#test-btn").click(function(e) {
      clearLog();
      testFunctions = [ testMqtt, testInfluxdb, testHttp3, testHttp2, testHttp1 ];
      appendLog( "Starting test of push targets" );
      $("#test-btn").prop("disabled", true);
      $('#spinner').show();

      var url = "/api/status";
      // var url = "/test/status.json";
      $.getJSON(url, function (cfg) {
        id = cfg["id"];
        console.log(testFunctions.length);
        testFunctions.pop()();
      })
      .fail(function () {
        showError('Unable to get data from the device.');
        $('#spinner').hide(); 
        $("#test-btn").prop("disabled", false);
      });
    });

    function testHttp1() {
      testName = "http-1";
      triggerTest();
    }
    
    function testHttp2() {
      testName = "http-2";
      triggerTest();
    }
    
    function testHttp3() {
      testName = "http-3";
      triggerTest();
    }
    
    function testInfluxdb() {
      testName = "influxdb";
      triggerTest();
    } 
    
    function testMqtt() {
      testName = "mqtt";
      triggerTest();
    }

    function triggerTest() {
      console.log("Triggering test for " + testName);

      var url = "/api/test/push";
      url += "?id=" + id + "&format=" + testName;
      // var url = "/test/push.json";  
      $.getJSON(url, function (cfg) {
        console.log(cfg);
        appendLog( "Starting test push target '" + testName + "'");
        setTimeout(checkPushTest, 2000);        
      })
      .fail(function () {
        console.log("Failed triggering test " + testName);

        appendLog( "Failed to test push target '" + testName + "'");
        if(testFunctions.length>0) {
          testFunctions.pop()();
        } else {
          appendLog("All tests completed");
          $('#spinner').hide(); 
          $("#test-btn").prop("disabled", false);
        }
      })
    }
  </script>

  <!-- START FOOTER -->

  <div class="container themed-container bg-primary text-light row-margin-10">(C) Copyright 2021-23 Magnus Persson</div>
</body>
</html>