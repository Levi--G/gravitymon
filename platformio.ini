; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
upload_speed = 921600
monitor_speed =  115200
platform = espressif8266
framework = arduino
board = d1_mini
build_unflags = 
build_flags = #-O0 -Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	-D ACTIVATE_OTA	
	#-D USE_GYRO_TEMP			 # If this is enabled the DS18 will not be used, temp is read from the gyro.  
	#-D DEBUG_ESP_HTTP_CLIENT	
	#-D DEBUG_ESP_HTTP_SERVER	
	#-D DEBUG_ESP_PORT=Serial			  	
	#-D SKIP_SLEEPMODE
	#-D DOUBLERESETDETECTOR_DEBUG true
	-D USE_LITTLEFS=true
	-D EMBED_HTML			      # If this is not used the html files needs to be on the file system (can be uploaded)
	-D USER_SSID=\""\""           # =\""myssid\""
	-D USER_SSID_PWD=\""\""       # =\""mypwd\""	
	-D CFG_APPVER="\"0.3.8\""
lib_deps = 
#	https://github.com/jrowberg/i2cdevlib.git 		# Using local copy of this library
	https://github.com/codeplea/tinyexpr
	https://github.com/graphitemaster/incbin 		
	https://github.com/khoih-prog/ESP_DoubleResetDetector
	https://github.com/tzapu/WiFiManager
	https://github.com/thijse/Arduino-Log
	https://github.com/bblanchon/ArduinoJson
	https://github.com/PaulStoffregen/OneWire
	https://github.com/milesburton/Arduino-Temperature-Control-Library

[env:gravity-debug]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
extra_scripts =  
	script/copy_firmware.py
	script/create_versionjson.py
build_unflags = ${common_env_data.build_unflags}
build_flags = 
    ${common_env_data.build_flags}
	-D COLLECT_PERFDATA				# This option will collect runtime data for a few defined methods to measure time, dumped to serial and/or influxdb 
	-D LOG_LEVEL=6					# Maximum log level for the debug build.
lib_deps = 
	${common_env_data.lib_deps}
board = ${common_env_data.board}
build_type = debug
board_build.filesystem = littlefs

[env:gravity-release]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
extra_scripts =  
	script/copy_firmware.py
	script/create_versionjson.py
build_unflags = ${common_env_data.build_unflags}
build_flags = 
    ${common_env_data.build_flags}
	-D LOG_LEVEL=4
lib_deps = 
	${common_env_data.lib_deps}
board = ${common_env_data.board}
build_type = release
board_build.filesystem = littlefs

[env:gravity-perf]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
extra_scripts =  
	script/copy_firmware.py
	script/create_versionjson.py
build_unflags = ${common_env_data.build_unflags}
build_flags = 
    ${common_env_data.build_flags}
	-D COLLECT_PERFDATA				# This option will collect runtime data for a few defined methods to measure time, dumped to serial and/or influxdb 
	-D LOG_LEVEL=5
lib_deps = 
	${common_env_data.lib_deps}
board = ${common_env_data.board}
build_type = release
board_build.filesystem = littlefs
