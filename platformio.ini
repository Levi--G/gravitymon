; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
upload_speed = 921600
monitor_speed =  115200
platform = espressif8266 @ 4.2.1
platform32 = espressif32 @ 6.4.0
framework = arduino
board = d1_mini
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	#-D SKIP_SLEEPMODE
	#-D FORCE_GRAVITY_MODE
	#-D COLLECT_PERFDATA
	-D ACTIVATE_OTA
	-D CFG_DISABLE_LOGGING # Turn off verbose/notice logging to reduce size and dont overload uart (applies to LOG_LEVEL6)
	-D GYRO_DISABLE_LOGGING
	-D CALC_DISABLE_LOGGING
	-D HELPER_DISABLE_LOGGING
	-D PUSH_DISABLE_LOGGING
	-D TSEN_DISABLE_LOGGING
	-D WIFI_DISABLE_LOGGING
	-D WEB_DISABLE_LOGGING
	-D MAIN_DISABLE_LOGGING
	-D USE_LITTLEFS=true
	-D CFG_APPVER="\"1.4.0\""
	-D CFG_GITREV=\""beta-3\""
	#!python script/git_rev.py
lib_deps =
	# Using local copy of these libraries
	# https://github.com/mp-se/i2cdevlib.git#<document> 		
	# https://github.com/mp-se/OneWire																		  
	# https://github.com/mp-se/Arduino-Temperature-Control-Library
	# https://github.com/khoih-prog/ESP_WiFiManager
	# https://github.com/khoih-prog/ESP_DoubleResetDetector
	https://github.com/mp-se/tinyexpr#v1.0.0
	https://github.com/mp-se/Arduino-Log#1.1.2
	https://github.com/mp-se/ArduinoJson#v6.21.3
	https://github.com/mp-se/arduinoCurveFitting#v1.0.6
	https://github.com/mp-se/arduino-mqtt#v2.5.1
	https://github.com/mp-se/ESPAsyncWebServer#0.1.1
	https://github.com/mp-se/ESPAsyncTCP#0.1.0
lib_deps32 = 
	https://github.com/mp-se/NimBLE-Arduino#1.4.1
extra_scripts =  
	script/copy_firmware.py
	script/create_versionjson.py
html_files = 
	html/calibration.min.htm
	html/config.min.htm
	html/firmware.min.htm
	html/format.min.htm
	html/about.min.htm
	html/index.min.htm
	html/test.min.htm
	html/backup.min.htm
	html/ws.min.htm

[env:gravity-release]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	#-D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	https://github.com/mp-se/incbin#v1.0.0
	${common_env_data.lib_deps}
board = ${common_env_data.board}
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<../test/tests*.cpp>
monitor_filters = esp8266_exception_decoder

[env:gravity-unit]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
lib_deps = 
	https://github.com/mp-se/incbin#v1.0.0
	https://github.com/bxparks/AUnit#v1.7.1
	${common_env_data.lib_deps}
board = ${common_env_data.board}
build_type = debug
board_build.filesystem = littlefs
build_src_filter = +<*> -<main.cpp> +<../test/tests*.cpp>
monitor_filters = esp8266_exception_decoder

[env:gravity32-release]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	-D CORE_DEBUG_LEVEL=2
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D ESP32D1
	#-DUSE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
lib_ignore = 
board = wemos_d1_mini32 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32c3-release]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-D ESP32C3
	-D ARDUINO_ESP32C3_DEV
	#-DUSE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_c3_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32c3v1-release]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-D ESP32C3
	-D ARDUINO_ESP32C3_DEV
	-D ESP32C3_REV1
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_c3_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s2-release]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	#-D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	${common_env_data.lib_deps}
lib_ignore = 
board = lolin_s2_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s3-release]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-D ESP32S3
	-D ARDUINO_ESP32S3_DEV
	-D ARDUINO_USB_CDC_ON_BOOT=1
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	#-D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_s3_mini 
build_type = release
board_build.partitions = part32_coredump.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

# This is a version for the floaty hardware. No DSB18 sensor and no battery measurement.
[env:gravity32lite-release] 
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-D ESP32LITE
	-D FLOATY
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin32_lite 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:cov-wokwi]
platform = ${common_env_data.platform32}
framework = arduino
board = lolin_s2_mini
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
build_unflags = 
	${common_env_data.build_unflags}
	-D USE_LITTLEFS
extra_scripts = 
	script/merge_firmware.py
	pre:script/gcov_filter.py
build_flags = 
	#-D WOKWI # Used to bypass issues with the simulator... 
  -lgcov
	-D ACTIVATE_GCOV
  -D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	-D USER_SSID=\""Wokwi-GUEST\""
	-D USER_SSID_PWD=\""\""
	#-D USE_SERIAL_PINS
	-D LOG_LEVEL=6
	-D CORE_DEBUG_LEVEL=6
	${common_env_data.build_flags}
lib_deps = 
	${common_env_data.lib_deps}
	https://github.com/bxparks/AUnit#v1.7.1
build_type = debug
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
build_src_filter = +<*> -<main.cpp> +<../test/tests*.cpp>
gcov_files = disabled

; [env:cov-api-wokwi]
; platform = ${common_env_data.platform32}
; framework = arduino
; board = lolin_s2_mini
; upload_speed = ${common_env_data.upload_speed}
; monitor_speed = ${common_env_data.monitor_speed}
; build_unflags = 
; 	${common_env_data.build_unflags}
; 	-D USE_LITTLEFS
; extra_scripts = 
; 	script/merge_firmware.py
; build_flags = 
; 	#-D WOKWI # Used to bypass issues with the simulator... 
; 	#-D ACTIVATE_GCOV
;   -D ESP32S2
; 	-D ARDUINO_ESP32S2_DEV
; 	-D USER_SSID=\""Wokwi-GUEST\""
; 	-D USER_SSID_PWD=\""\""
; 	#-D USE_SERIAL_PINS
; 	-D LOG_LEVEL=4
; 	-D CORE_DEBUG_LEVEL=1
; 	${common_env_data.build_flags}
; lib_deps = 
; 	${common_env_data.lib_deps}
; build_type = release
; board_build.partitions = part32.csv
; board_build.filesystem = littlefs 
; board_build.embed_txtfiles = ${common_env_data.html_files}

[env:cov-esp32]
framework = ${common_env_data.framework}
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
	#script/merge_firmware.py
	pre:script/gcov_filter.py
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D ACTIVATE_GCOV
  -D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	#-D ESP32C3
	#-D ARDUINO_ESP32C3_DEV
	#-D USER_SSID=\""Wokwi-GUEST\""
	#-D USER_SSID_PWD=\""\""
	-D LOG_LEVEL=4
	-D CORE_DEBUG_LEVEL=2
	-DUSE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	#${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_s2_mini
build_type = debug
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
#board_build.flash_mode = dio
gcov_files = disable
#gcov_files = webserver.cpp gyro.cpp main.cpp
#gcov_files = webserver.cpp
#gcov_files = main.cpp
#gcov_files = wifi.cpp 
